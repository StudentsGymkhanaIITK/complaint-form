{"version":3,"sources":["Components/Home/FormInput.js","Components/Navbar/Navbar.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["FormInput","onChange","e","setState","target","name","value","className","type","this","required","Component","Navigation","ref","wrapperRef","bg","variant","Brand","href","Home","props","context","state","email","message","position","subject","post","input","captchState","onLoadRecaptcha","bind","verifyCallback","handleInputChange","event","captchaDemo","console","log","reset","recaptchaToken","action","defaultValue","rows","el","size","data-theme","render","sitekey","onloadCallback","hidden","Button","id","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e8037f4.chunk.js","sourcesContent":["\nimport React, { Component } from \"react\";\n\nclass FormInput extends Component {\n  onChange = (e) =>\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  render() {\n    return (\n      <div>\n        <div className=\"form-group\">\n          <label>Other *</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"entry.770045899\"\n            onChange={this.onChange}\n            required\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormInput;\n","import React, { Component } from \"react\";\nimport \"./Navbar.css\";\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar\n          ref={this.wrapperRef}\n          bg=\"primary\"\n          className=\"width\"\n          variant=\"dark\"\n        >\n          <Navbar.Brand href=\"/\">Complaint Form</Navbar.Brand>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport FormInput from \"./FormInput\";\nimport { ReCaptcha } from \"react-recaptcha-google\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport Navbar from \"../Navbar/Navbar\";\n\nclass Home extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      position: \"\",\n      subject: \"\",\n      post: null,\n      input: false,\n      captchState: false,\n    };\n\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  handleInputChange(event) {\n    this.setState({\n      post: event.target.value,\n    });\n  }\n\n  componentDidMount() {\n    // loadReCaptcha();\n    if (this.captchaDemo) {\n      console.log(\"started, just a second...\");\n      this.captchaDemo.reset();\n    }\n  }\n\n  onLoadRecaptcha() {\n    if (this.captchaDemo) {\n      this.captchaDemo.reset();\n    }\n  }\n\n  verifyCallback(recaptchaToken) {\n    // Here you will get the final recaptchaToken!!!\n    // console.log(recaptchaToken, \"<= your recaptcha token\");\n    this.setState({ captchState: true });\n  }\n\n  onChange = (e) =>\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <div className=\"col-sm-9 col-lg-6 m-auto\">\n          <div className=\"card card-body mt-4 mb-4 \">\n            <form action=\"https://docs.google.com/forms/u/0/d/e/1FAIpQLSfdqLfhF5Z2-fvUpf_zkwk8b_p7ZvndJFEJ105rd1wk5-4aoA/formResponse\">\n              <div className=\"form-group mt-3\">\n                <label>Name *</label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"entry.386602193\"\n                  onChange={this.onChange}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group mt-3\">\n                <label>Roll Number *</label>\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  name=\"entry.2071498520\"\n                  onChange={this.onChange}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>IITK Email ID *</label>\n                <input\n                  className=\"form-control\"\n                  type=\"email\"\n                  name=\"entry.1660967211\"\n                  onChange={this.onChange}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>What is the Domain of your Complaint? *</label>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control\"\n                    name=\"entry.2119653361\"\n                    onChange={this.handleInputChange}\n                  >\n                    <option defaultValue>\n                      What is the Domain of your Complaint? *\n                    </option>\n                    <option value=\"Academic Affairs for Undergraduate Students\">\n                      Academic Affairs for Undergraduate Students\n                    </option>\n                    <option value=\"Academic Affairs for Postgraduate Students\">\n                      Academic Affairs for Postgraduate Students\n                    </option>\n                    <option value=\"Campus Culture in General (e.g.: Gender sensitivity, Senior-Junior interaction, Security related, etc.)\">\n                      Campus Culture in General\n                    </option>\n                    <option value=\"Commercial Establishments (Food Outlets, Shops etc.)\">\n                      Commercial Establishments\n                    </option>\n                    <option value=\"Cells (Community Welfare, Entrepreneurship, Election Commission, Outreach, Vox Populi)\">\n                      Cells\n                    </option>\n                    <option value=\"Councils (Academics and Career Council, Games and Sports Council, Media and Cultural Council, Science and Technology Council)\">\n                      Councils\n                    </option>\n                    <option value=\"Festivals (Antaragni, Techkriti, Udghosh)\">\n                      Festivals\n                    </option>\n                    <option value=\"General Championship (Galaxy, Takneek, Inferno)\">\n                      General Championship\n                    </option>\n                    <option value=\"Grievance Redressal by the Institute Administration\">\n                      Grievance Redressal by the Institute Administration\n                    </option>\n                    <option value=\"Hostel Affairs\">Hostel Affairs</option>\n                    <option value=\"Old SAC/New SAC related affairs\">\n                      Old SAC/New SAC related affairs\n                    </option>\n                    <option value=\"Other infrastructures (Health Centre, Library, Visitors Hostel and allied facilities, etc)\">\n                      Other infrastructures\n                    </option>\n                    <option value=\"Placements\">Placements</option>\n                    <option value=\"Students' Senate\">Students' Senate</option>\n                    <option value=\"Other:\">Other</option>\n                  </select>\n                </div>\n              </div>\n\n              {this.state.post == \"Other:\" ? (\n                <FormInput />\n              ) : (\n                console.log(\"Failed\")\n              )}\n\n              <div className=\"form-group mt-3\">\n                <label>Your Complaint *</label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"entry.1454249708\"\n                  onChange={this.onChange}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group mt-3\">\n                <label>Suggestions (If Any)</label>\n                <textarea\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"entry.228886821\"\n                  onChange={this.onChange}\n                  rows=\"5\"\n                />\n              </div>\n\n              <ReCaptcha\n                ref={(el) => {\n                  this.captchaDemo = el;\n                }}\n                size=\"normal\"\n                data-theme=\"dark\"\n                render=\"explicit\"\n                sitekey=\"6Lep4-0ZAAAAAJFKZ-LKTv5tgz8dqQJjsylfJhnW\"\n                onloadCallback={this.onLoadRecaptcha}\n                verifyCallback={this.verifyCallback}\n              />\n              <ReCAPTCHA\n                hidden\n                sitekey=\"6LcmsesZAAAAAEJ9b7FBvTj3-kztxDSlxKbCKHEG\"\n              />\n\n              {this.state.captchState ? (\n                <div className=\"form-group\">\n                  <Button\n                    type=\"submit\"\n                    id=\"submit-btn\"\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"form-group\">\n                  <Button\n                    type=\"submit\"\n                    id=\"submit-btn\"\n                    disabled\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </Button>\n                </div>\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Home from './Components/Home/Home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Home />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}